

TO DO:
	Saving and loading Entities, SceneNodes, btCollisionObjects, btCollisionShapes from JSON
	Map loading system from json
	Particles
	Multiplayer:
		divide code sections: server side and client side
		internet connection:
			TCP - initialization, events, lossless informations
			UDP - streaming entities transofrmation, movement and animation informations in realtime
	Add menu
	LOD system
	Sprites in world space
	Mesh class resource (combination of graphical model and it's LOD, collision shape); possibly replacement for SceneNode
	Rewrite collision shape and collision shape constructor (combine them into one class) - make CollisionShape resource; remove CollisionShapeManager and use ResourceManager instead
	

Done:
	Makefile (and binaries?) for linux
	Using compressed files
	Decoding ogg sound files
	Entity-derived classes and other class reorganisation, move from game\* to engine\*:
		StaticEntity
		DynamicEntity
		Trigger
		CharacterWalkTrigger -> MotionControllerTrigger
		MotionController
	Multiple Entity-derived classes in one module
	Sounds
	Animations
	Loading archives from irrlicht file system
	enable window resizing with fov and aspect correction
	ResourceManager - garbage collecor
	Model class resource, integrate it with ResourceManager
	Better ray tracing
	Sound (previously SoundSampler) as resource and integrate it with ResourceManager
	Material resource class
	Configurations in json files
	

TO DO in future:
	MotionController steps on staircase or low objects
	NavMesh
	Light maps
	Dynamic light maps
	Sound occlusion
	

Bugs:
	When entering low-roofed place with very short crouch-key press then character behaves like standing still
	Executable once locked whole system (needed to cut power to do anything)
	Sometimes undefined coordinates while starting game (randomly)
	

To test:
	CollisionShapeConstructor::Clone
	ResourceManager garbage collector
	JSON wrapper
	
