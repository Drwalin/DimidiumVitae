

TO DO:
	Multiplayer:
		divide code sections: server side and client side
		internet connection:
			TCP - initialization, events, lossless informations
			UDP - streaming entities transofrmation, movement and animation informations in realtime
	Mesh class resource (combination of graphical model and it's LOD, collision shape); possibly replacement for SceneNode
	Add TryBox and TryCylinder to ObjToShapeConverter
	Optimize crouching/standing up in MotionController
	Optimise setting transformation to ISceneNode in SceneNode code
	Optimise loading  and creating Entities, btCollisionShape and CollisionShape - find a way of using the same pointer to btCollisionShape for different btCollisionObjects
	Lights
	FileSystem class and File clss for unified file access
	Particles
	LOD system
	Sprites in world space
	Map loading system from json
	Saving and loading Entities, SceneNodes from JSON
	Add: main menu, pause menu, menu system, comfortable(and faster?) GUI system, loading screen
		- add video player (maybe from *.png image sequence and *.ogg sound file)
	

Done:
	Makefile (and binaries?) for linux
	Using compressed files
	Decoding ogg sound files
	Entity-derived classes and other class reorganisation, move from game\* to engine\*:
		StaticEntity
		DynamicEntity
		Trigger
		CharacterWalkTrigger -> MotionControllerTrigger
		MotionController
	Multiple Entity-derived classes in one module
	Sounds
	Animations
	Loading archives from irrlicht file system
	enable window resizing with fov and aspect correction
	ResourceManager - garbage collecor
	Model class resource, integrate it with ResourceManager
	Better ray tracing
	Sound (previously SoundSampler) as resource and integrate it with ResourceManager
	Material resource class
	Configurations in json files
	Rewrite collision shape and collision shape constructor (combine them into one class) - make CollisionShape resource; remove CollisionShapeManager and use ResourceManager instead
	Texture resource class, and use it while loading material
	

TO DO in future:
	MotionController steps on staircase or low objects
	NavMesh
	Light maps
	Dynamic light maps
	Sound occlusion
	Mesh occlusion
	Optimise rendering?
	

Bugs:
	When entering low-roofed place with very short crouch-key press then character behaves like standing still
	Executable once locked whole system (needed to cut power to do anything)
	Sometimes undefined coordinates while starting game (randomly)
	

To test:
	CollisionShapeConstructor::Clone
	ResourceManager garbage collector
	JSON wrapper
	
